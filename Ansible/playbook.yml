---

- name: Setting up VMs
  gather_facts: true
  hosts: Project

  tasks:

    - name: Create group "devops"
      ansible.builtin.group:
        name: devops
        state: present
        gid: 1400
      become: true

    - name: Add user "belhard"
      ansible.builtin.user:
        name: belhard
        group: devops
        shell: /bin/bash
        comment: "Belhard DevOps user"
        state: present
        uid: 1500
      become: true
    
    - name: Add belhard user to the sudoers
      copy:
        dest: "/etc/sudoers.d/belhard"
        content: |
          belhard ALL = NOPASSWD: ALL
          belhard ALL = (ALL) NOPASSWD:ALL
      become: yes

    - name: Add vagrant user to the sudoers
      copy:
        dest: "/etc/sudoers.d/belhard"
        content: |
          vagrant ALL = NOPASSWD: ALL
          vagrant ALL = (ALL) NOPASSWD:ALL
      become: yes

    - name: Add SSH keys 
      authorized_key:
         user: vagrant
         state: present
         key: "{{ lookup('file', '/home/user/Project/Ansible/id_rsa.pub') }}"
      become: true
    
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
      become: true

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'wget', 'unzip', 'zip', 'software-properties-common', 'python3-pip', 'python-pip', 'virtualenv', 'python3-setuptools']
      become: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: true

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
      become: true
    
    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
      become: true

    - name: Install Docker Module for Python
      pip:
        name: docker
      become: true
    
    - name: Adding docker users
      user:
        name: "{{ item }}"
        shell: /bin/bash
        append: yes
        groups: docker
      with_items: [ 'vagrant', 'belhard' ]
      become: true
    
    - name: Install docker-compose
      get_url: 
        url: https://github.com/docker/compose/releases/download/v2.4.1/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '+x'
      become: true
    
    - name: install docker-compose using pip
      pip:
        name:
          - docker
          - docker-compose

    - name: Create directory "site"
      file:
        path=/home/vagrant/site
        state=directory
    
    - name: Create directory "mariadb"
      file:
        path=/home/vagrant/site/mariadb
        state=directory
    
    - name: Create directory "nginx"
      file:
        path=/home/vagrant/site/nginx
        state=directory
  
    - name: Create directory "nginx/data"
      file:
        path=/home/vagrant/site/nginx/data
        state=directory
      
    - name: Create directory "data"
      file:
        path=/home/vagrant/site/data
        state=directory
    
    - name: Create directory "data/html"
      file:
        path=/home/vagrant/site/data/html
        state=directory

    - name: Create directory "data/mysql"
      file:
        path=/home/vagrant/site/data/mysql
        state=directory
    
    - name: Create directory "logs"
      file:
        path=/home/vagrant/site/logs
        state=directory
    
    - name: Create directory "logs/nginx"
      file:
        path=/home/vagrant/site/logs/nginx
        state=directory
    
    - name: Create directory "wordpress"
      file:
        path=/home/vagrant/site/wordpress
        state=directory
    
    - name: Send nginx.conf to Nginx
      copy: src="~/Project/site/nginx/nginx.conf" dest="/home/vagrant/site/nginx/nginx.conf"  
    
    - name: copy Docker Compose file
      copy:
        src: ~/Project/Docker/docker-compose.yml
        dest: /home/vagrant/site/docker-compose.yml
      loop:
      - docker-compose.yml
           
    - name: Run docker-compose
      docker_compose:
        project_src: /home/vagrant/site
        files:
        - docker-compose.yml
    
#    - name: copy backup.sh
#      copy:
#        src: ~/Project/site/backup.sh
#        dest: /home/vagrant/site/mariadb/backup.sh
#        mode: '+x'
#        remote_src: false
#      loop:
#      - backup.sh
#      become: true
#    
#    - name: copy copy.sh
#      copy:
#        src: ~/Project/site/copy.sh
#        dest: /home/vagrant/site/mariadb/copy.sh
#        #mode: u+rwx,g+rwx,o+rwx
#        remote_src: true
#      loop:
#      - backup.sh
#      become: true
#    
#    - name: Run a script using an executable in a non-system path
#      script: /home/vagrant/site/mariadb/copy.sh
#      args:
#        executable: /bin/bash